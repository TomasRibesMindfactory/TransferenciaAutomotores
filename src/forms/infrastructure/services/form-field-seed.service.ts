import { Injectable } from '@nestjs/common';
import { FormFieldRepositoryPort } from 'src/forms/domain/ports/form-field-repository.port';

@Injectable()
export class FormFieldSeedService {
  constructor(private readonly formFieldRepository: FormFieldRepositoryPort) {}

  async seedFormFields(): Promise<void> {
    console.log('üå± Verificando campos de formularios en base de datos...');

    try {
      // Eliminar campos existentes para recrearlos con la configuraci√≥n actualizada
      const existingFields = (await this.formFieldRepository.findAll?.()) || [];
      if (existingFields.length > 0) {
        console.log('üóë Eliminando campos existentes para actualizar...');
        for (const field of existingFields) {
          await this.formFieldRepository.delete?.(field.id);
        }
      }

      console.log('üå± Poblando campos de formularios actualizados...');

      await this.createVehicleRegistrationFields();
      await this.createVehicleTransferFields();

      console.log('‚úÖ Campos de formularios insertados exitosamente');
    } catch (error) {
      console.error('‚ùå Error al insertar campos:', error);
    }
  }

  private async createVehicleRegistrationFields(): Promise<void> {
    const fields = [
      // Datos B√°sicos del Veh√≠culo
      {
        formId: 'vehicle-registration',
        name: 'patente',
        type: 'plate',
        label: 'Dominio (Patente)',
        description: null,
        placeholder: 'AA111AA o AAA111',
        required: true,
        orderIndex: 1,
        help: 'Ingrese la nueva patente asignada al veh√≠culo',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateNewPlate',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/dominio',
            fields: {
              modelo_descripcion: 'pmoDescripcion',
              codigo_alta: 'atrPcaId',
              codigo_alta_descripcion: 'pcaDescripcion',
              registro_automotor: 'atrPrtId',
              registro_descripcion: 'prtDescripcion',
              fecha_alta_vehiculo: 'atrFechaAlta',
              fecha_inicio_vigencia: 'atrFechaInicio',
              anio_fabricacion: 'atrFechaFabricacion',
              marca_descripcion: 'marcaDescripcion',
              tipo_rnpa_descripcion: 'tipoDescripcion',
              valor_vehiculo: 'valorVigente',
            },
            debounceTime: 500,
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'tipo_vehiculo',
        type: 'select',
        label: 'Tipo de Veh√≠culo',
        description: null,
        required: true,
        orderIndex: 2,
        help: 'Seleccione el tipo de veh√≠culo seg√∫n clasificaci√≥n del registro',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'automovil', label: 'Autom√≥vil' },
            { id: 'motocicleta', label: 'Motocicleta' },
            { id: 'camion', label: 'Cami√≥n' },
            { id: 'camioneta', label: 'Camioneta' },
            { id: 'colectivo', label: 'Colectivo' },
            { id: 'remolque', label: 'Remolque' },
            { id: 'semirremolque', label: 'Semirremolque' },
            { id: 'tractor', label: 'Tractor' },
            { id: 'maquinaria_especial', label: 'Maquinaria Especial' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'anio_fabricacion',
        type: 'number',
        label: 'A√±o de Fabricaci√≥n',
        description: null,
        placeholder: '2024',
        required: true,
        orderIndex: 3,
        help: 'A√±o de fabricaci√≥n seg√∫n documentaci√≥n del fabricante',
        fieldConfig: JSON.stringify({
          min: 1900,
          max: 2030,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'origen_rnpa',
        type: 'radio',
        label: 'Origen RNPA',
        description: null,
        required: true,
        orderIndex: 4,
        help: 'Determina si el veh√≠culo es de origen nacional o importado',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'nacional', label: 'Nacional' },
            { id: 'importado', label: 'Importado' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'color_vehiculo',
        type: 'select',
        label: 'Color Principal',
        description: null,
        required: true,
        orderIndex: 5,
        fieldConfig: JSON.stringify({
          options: [
            { id: 'blanco', label: 'Blanco' },
            { id: 'negro', label: 'Negro' },
            { id: 'gris', label: 'Gris' },
            { id: 'azul', label: 'Azul' },
            { id: 'rojo', label: 'Rojo' },
            { id: 'verde', label: 'Verde' },
            { id: 'amarillo', label: 'Amarillo' },
            { id: 'marron', label: 'Marr√≥n' },
            { id: 'bordo', label: 'Bord√≥' },
            { id: 'violeta', label: 'Violeta' },
            { id: 'plateado', label: 'Plateado' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'numero_motor',
        type: 'text',
        label: 'N√∫mero de Motor',
        description: null,
        required: true,
        orderIndex: 6,
        help: 'N√∫mero grabado en el motor del veh√≠culo',
        fieldConfig: JSON.stringify({
          maxLength: 50,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'numero_chasis',
        type: 'text',
        label: 'N√∫mero de Chasis/VIN',
        description: null,
        required: true,
        orderIndex: 7,
        help: 'N√∫mero de chasis o VIN del veh√≠culo',
        fieldConfig: JSON.stringify({
          maxLength: 50,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'fecha_primera_inscripcion',
        type: 'date',
        label: 'Fecha de Primera Inscripci√≥n',
        description: null,
        required: true,
        orderIndex: 8,
        help: 'Fecha en que se realiza la primera inscripci√≥n',
        defaultValue: '{{ today }}',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'marca_rnpa',
        type: 'text',
        label: 'C√≥digo Marca RNPA',
        description: null,
        required: true,
        orderIndex: 9,
        help: 'C√≥digo de marca asignado por el RNPA',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateRnpaCode',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/modelo-rnpa',
            requestBody: {
              value: '{{ field_value }}',
              marca_id: '{{ marca_rnpa }}',
              tipo_id: '{{ tipo_rnpa }}',
            },
            fields: {
              marca_descripcion: 'marcaDescripcion',
            },
            debounceTime: 500,
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'marca_descripcion',
        type: 'text',
        label: 'Marca del Veh√≠culo',
        description: null,
        readonly: true,
        orderIndex: 10,
        help: 'Se completa autom√°ticamente al ingresar el c√≥digo de marca',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'tipo_rnpa',
        type: 'text',
        label: 'C√≥digo Tipo RNPA',
        description: null,
        required: true,
        orderIndex: 11,
        help: 'C√≥digo de tipo de veh√≠culo seg√∫n RNPA',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateRnpaCode',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/modelo-rnpa',
            requestBody: {
              value: '{{ field_value }}',
              marca_id: '{{ marca_rnpa }}',
            },
            fields: {
              tipo_rnpa_descripcion: 'tipoDescripcion',
            },
            debounceTime: 500,
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'tipo_rnpa_descripcion',
        type: 'text',
        label: 'Tipo de Veh√≠culo RNPA',
        description: null,
        readonly: true,
        orderIndex: 12,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'modelo_rnpa',
        type: 'text',
        label: 'C√≥digo Modelo RNPA',
        description: null,
        required: true,
        orderIndex: 13,
        help: 'C√≥digo del modelo asignado por el RNPA',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateRnpaCode',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/modelo-rnpa',
            requestBody: {
              value: '{{ field_value }}',
              marca_id: '{{ marca_rnpa }}',
              tipo_id: '{{ tipo_rnpa }}',
            },
            fields: {
              modelo_descripcion: 'modeloDescripcion',
            },
            debounceTime: 500,
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'modelo_descripcion',
        type: 'text',
        label: 'Modelo del Veh√≠culo',
        description: null,
        readonly: true,
        orderIndex: 14,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'version_modelo',
        type: 'text',
        label: 'Versi√≥n del Modelo',
        description: null,
        orderIndex: 15,
        help: 'Ej: LT, LTZ, Titanium, etc.',
        fieldConfig: JSON.stringify({
          maxLength: 100,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'combustible',
        type: 'select',
        label: 'Tipo de Combustible',
        description: null,
        required: true,
        orderIndex: 16,
        fieldConfig: JSON.stringify({
          options: [
            { id: 'nafta', label: 'Nafta' },
            { id: 'diesel', label: 'Diesel' },
            { id: 'gnc', label: 'GNC (Gas Natural Comprimido)' },
            { id: 'electrico', label: 'El√©ctrico' },
            { id: 'hibrido', label: 'H√≠brido' },
            { id: 'flex', label: 'Flex (Nafta/Etanol)' },
            { id: 'hidrogeno', label: 'Hidr√≥geno' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'registro_automotor',
        type: 'select',
        label: 'Registro Automotor',
        description: null,
        required: true,
        orderIndex: 17,
        help: 'Seleccione el registro automotor correspondiente',
        fieldConfig: JSON.stringify({
          loadFromEndpoint: true,
          endpoint: 'forms/dependent-options',
          requestBody: {
            endpoint: 'PAR_REGISTRO_AUTOMOTORES',
            parentValue: 'ALL',
          },
          valueField: 'codigo_registro',
          labelField: 'descripcion',
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({
          onChange: {
            action: 'populate',
            endpoint: 'validations/registro-automotor',
            requestBody: {
              value: '{{ field_value }}',
            },
            fields: {
              registro_descripcion: 'prtDescripcion',
            },
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'registro_descripcion',
        type: 'text',
        label: 'Descripci√≥n del Registro',
        description: null,
        readonly: true,
        orderIndex: 18,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'codigo_alta',
        type: 'select',
        label: 'C√≥digo de Alta',
        description: null,
        required: true,
        orderIndex: 19,
        fieldConfig: JSON.stringify({
          loadFromEndpoint: true,
          endpoint: 'forms/dependent-options',
          requestBody: {
            endpoint: 'PAR_CODIGOS_ALTAS',
            parentValue: 'ALL',
          },
          valueField: 'codigo_alta',
          labelField: 'descripcion',
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({
          onChange: {
            action: 'populate',
            endpoint: 'validations/codigo-alta',
            requestBody: {
              value: '{{ field_value }}',
            },
            fields: {
              codigo_alta_descripcion: 'pcaDescripcion',
            },
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'codigo_alta_descripcion',
        type: 'text',
        label: 'Descripci√≥n C√≥digo de Alta',
        description: null,
        readonly: true,
        orderIndex: 20,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'numero_titulo',
        type: 'text',
        label: 'N√∫mero de T√≠tulo',
        description: null,
        required: true,
        orderIndex: 21,
        help: 'N√∫mero del t√≠tulo emitido por el registro',
        fieldConfig: JSON.stringify({
          maxLength: 20,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'fecha_emision_titulo',
        type: 'date',
        label: 'Fecha de Emisi√≥n del T√≠tulo',
        description: null,
        required: true,
        orderIndex: 22,
        defaultValue: '{{ today }}',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'observaciones_titulo',
        type: 'textarea',
        label: 'Observaciones del T√≠tulo',
        description: null,
        placeholder: 'Observaciones especiales sobre la documentaci√≥n...',
        orderIndex: 23,
        fieldConfig: JSON.stringify({
          maxLength: 500,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'cuit_propietario',
        type: 'cuit',
        label: 'CUIT del Propietario',
        description: null,
        placeholder: 'XX-XXXXXXXX-X',
        required: true,
        orderIndex: 24,
        help: 'CUIT de la persona f√≠sica o jur√≠dica propietaria',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateCuit',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/cuit',
            fields: {
              propietario_descripcion: 'spoDenominacion',
              tipo_documento: 'tipoDocumento',
              domicilio_fiscal: 'domicilioFiscal',
            },
            debounceTime: 500,
          },
        }),
      },
      {
        formId: 'vehicle-registration',
        name: 'propietario_descripcion',
        type: 'text',
        label: 'Datos del Propietario',
        description: null,
        readonly: true,
        orderIndex: 25,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'porcentaje_propiedad',
        type: 'percentage',
        label: 'Porcentaje de Propiedad',
        description: null,
        required: true,
        orderIndex: 26,
        defaultValue: '100',
        help: 'Porcentaje de propiedad (normalmente 100% para un solo propietario)',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 100,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'tipo_vinculo',
        type: 'select',
        label: 'Tipo de V√≠nculo',
        description: null,
        required: true,
        orderIndex: 27,
        defaultValue: 'PRO',
        help: 'Seleccione el tipo de v√≠nculo seg√∫n PAR_TIPOS_VINCULOS',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'propietario', label: 'Propietario' },
            { id: 'usuario', label: 'Usuario' },
            { id: 'tenedor', label: 'Tenedor' },
            { id: 'poseedor', label: 'Poseedor' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'fecha_inicio_vinculo',
        type: 'date',
        label: 'Fecha Inicio V√≠nculo',
        description: null,
        required: true,
        orderIndex: 28,
        defaultValue: '{{ today }}',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'es_responsable',
        type: 'radio',
        label: '¬øSer√° Responsable Tributario?',
        description: null,
        required: true,
        orderIndex: 29,
        defaultValue: 'S',
        help: "Marque 'S√≠' si el propietario ser√° responsable tributario",
        fieldConfig: JSON.stringify({
          options: [
            { id: 'si', label: 'S√≠' },
            { id: 'no', label: 'No' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'cilindrada',
        type: 'number',
        label: 'Cilindrada (cm¬≥)',
        description: null,
        placeholder: '1600',
        orderIndex: 30,
        help: 'Cilindrada del motor seg√∫n especificaciones t√©cnicas',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 10000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'potencia',
        type: 'number',
        label: 'Potencia (HP)',
        description: null,
        placeholder: '120',
        orderIndex: 31,
        help: 'Potencia del motor seg√∫n especificaciones t√©cnicas',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 1000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'peso_vehiculo',
        type: 'number',
        label: 'Peso del Veh√≠culo (kg)',
        description: null,
        placeholder: '1200',
        orderIndex: 32,
        help: 'Peso del veh√≠culo sin carga',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 50000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'capacidad_carga',
        type: 'number',
        label: 'Capacidad de Carga (kg)',
        description: null,
        placeholder: '500',
        orderIndex: 33,
        help: 'Capacidad m√°xima de carga del veh√≠culo',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 50000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'cantidad_ejes',
        type: 'number',
        label: 'Cantidad de Ejes',
        description: null,
        orderIndex: 34,
        defaultValue: '2',
        help: 'Cantidad total de ejes del veh√≠culo',
        fieldConfig: JSON.stringify({
          min: 1,
          max: 10,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'cantidad_ruedas',
        type: 'number',
        label: 'Cantidad de Ruedas',
        description: null,
        orderIndex: 35,
        defaultValue: '4',
        help: 'Cantidad total de ruedas del veh√≠culo',
        fieldConfig: JSON.stringify({
          min: 2,
          max: 20,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'tara',
        type: 'number',
        label: 'Tara (kg)',
        description: null,
        orderIndex: 36,
        help: 'Peso del veh√≠culo sin carga ni pasajeros',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 50000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'pbt',
        type: 'number',
        label: 'PBT - Peso Bruto Total (kg)',
        description: null,
        orderIndex: 37,
        help: 'Peso bruto total m√°ximo autorizado para el veh√≠culo',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 100000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'documentos_presentados',
        type: 'multiselect',
        label: 'Documentos Presentados',
        description: null,
        required: true,
        orderIndex: 38,
        help: 'Seleccione todos los documentos presentados para el alta',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'cert_fabricacion', label: 'Certificado de Fabricaci√≥n' },
            { id: 'factura_compra', label: 'Factura de Compra' },
            { id: 'cert_importacion', label: 'Certificado de Importaci√≥n' },
            { id: 'cert_libre_deuda', label: 'Certificado Libre de Deuda' },
            { id: 'dni_propietario', label: 'DNI del Propietario' },
            { id: 'constancia_cuit', label: 'Constancia de CUIT' },
            { id: 'poder_notarial', label: 'Poder Notarial (si aplica)' },
            { id: 'formulario_13i', label: 'Formulario 13I' },
            { id: 'cert_gnc', label: 'Certificado GNC (si aplica)' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'verificacion_policial',
        type: 'radio',
        label: 'Verificaci√≥n Policial',
        description: null,
        required: true,
        orderIndex: 39,
        help: 'Estado de la verificaci√≥n policial del veh√≠culo',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'verificado', label: 'S√≠, verificado' },
            { id: 'no_verificado', label: 'No verificado' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'usuario_alta',
        type: 'text',
        label: 'Usuario de Alta',
        description: null,
        readonly: true,
        orderIndex: 40,
        help: 'Se completa autom√°ticamente con el usuario actual del sistema',
        defaultValue: '{{ currentUser }}',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'fecha_alta_vehiculo',
        type: 'datetime',
        label: 'Fecha y Hora de Alta',
        description: null,
        readonly: true,
        orderIndex: 41,
        defaultValue: '{{ now }}',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-registration',
        name: 'observaciones',
        type: 'textarea',
        label: 'Observaciones Generales',
        description: null,
        placeholder: 'Observaciones adicionales sobre el alta del veh√≠culo...',
        orderIndex: 42,
        help: 'Registre cualquier informaci√≥n adicional relevante',
        fieldConfig: JSON.stringify({
          maxLength: 1000,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
    ];

    for (const fieldData of fields) {
      await this.formFieldRepository.create(fieldData);
    }
  }

  private async createVehicleTransferFields(): Promise<void> {
    const fields = [
      // SECCI√ìN: Datos del Veh√≠culo
      {
        formId: 'vehicle-transfer',
        name: 'patente',
        type: 'plate',
        label: 'Dominio (Patente)',
        description: null,
        placeholder: 'AB123CD',
        required: true,
        readonly: false,
        orderIndex: 1,
        help: 'Campo clave para la b√∫squeda del veh√≠culo en el sistema',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validatePlate',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/dominio',
            fields: {
              modelo_rnpa: 'atrPmoId',
              modelo_descripcion: 'pmoDescripcion',
              codigo_alta: 'atrPcaId',
              codigo_alta_descripcion: 'pcaDescripcion',
              registro_automotor: 'atrPrtId',
              registro_descripcion: 'prtDescripcion',
              fecha_alta: 'atrFechaAlta',
              fecha_inicio: 'atrFechaInicio',
              fecha_fabricacion: 'atrFechaFabricacion',
              fecha_rige: 'atrFechaRige',
              origen_rnpa: 'atrOrigenRnpa',
              archivo_id: 'atrId',
            },
            debounceTime: 800,
          },
        }),
      },
      {
        formId: 'vehicle-transfer',
        name: 'tipo_vehiculo',
        type: 'hidden',
        label: 'Tipo de Veh√≠culo',
        description: null,
        readonly: true,
        orderIndex: 2,
        defaultValue: 'AUTO',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'modelo_rnpa',
        type: 'text',
        label: 'Modelo RNPA',
        description: null,
        readonly: true,
        orderIndex: 3,
        help: 'C√≥digo del modelo asignado por el Registro Nacional de Propiedad del Automotor',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'modelo_descripcion',
        type: 'text',
        label: 'Descripci√≥n del Modelo',
        description: null,
        readonly: true,
        orderIndex: 4,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'codigo_alta',
        type: 'text',
        label: 'C√≥digo de Alta',
        description: null,
        readonly: true,
        orderIndex: 5,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'codigo_alta_descripcion',
        type: 'text',
        label: 'Descripci√≥n C√≥digo de Alta',
        description: null,
        readonly: true,
        orderIndex: 6,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'registro_automotor',
        type: 'text',
        label: 'Registro Automotor',
        description: null,
        readonly: true,
        orderIndex: 7,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'registro_descripcion',
        type: 'text',
        label: 'Descripci√≥n Registro',
        description: null,
        readonly: true,
        orderIndex: 8,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'fecha_alta',
        type: 'date',
        label: 'Fecha de Alta',
        description: null,
        readonly: true,
        orderIndex: 9,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'fecha_inicio',
        type: 'date',
        label: 'Fecha de Inicio de Vigencia',
        description: null,
        readonly: true,
        orderIndex: 10,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'fecha_fabricacion',
        type: 'number',
        label: 'A√±o de Fabricaci√≥n',
        description: null,
        placeholder: '2024',
        readonly: true,
        orderIndex: 11,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'fecha_rige',
        type: 'date',
        label: 'Fecha que Rige',
        description: null,
        readonly: true,
        orderIndex: 12,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'origen_rnpa',
        type: 'radio',
        label: 'Origen RNPA',
        description: null,
        required: true,
        orderIndex: 13,
        help: 'Determina si el veh√≠culo es de origen nacional o importado',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'N', label: 'Nacional' },
            { id: 'I', label: 'Importado' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'marca_rnpa',
        type: 'text',
        label: 'Marca RNPA',
        description: null,
        placeholder: 'C√≥digo de marca',
        orderIndex: 14,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'marca_descripcion',
        type: 'text',
        label: 'Descripci√≥n Marca',
        description: null,
        readonly: true,
        orderIndex: 15,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'tipo_rnpa',
        type: 'text',
        label: 'Tipo RNPA',
        description: null,
        orderIndex: 16,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'tipo_rnpa_descripcion',
        type: 'text',
        label: 'Descripci√≥n Tipo RNPA',
        description: null,
        readonly: true,
        orderIndex: 17,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'modelo_rnpa_descripcion',
        type: 'text',
        label: 'Descripci√≥n Modelo RNPA',
        description: null,
        readonly: true,
        orderIndex: 18,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'archivo_id',
        type: 'hidden',
        label: 'N√∫mero de Archivo',
        description: null,
        readonly: true,
        orderIndex: 19,
        defaultValue: '',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },

      // SECCI√ìN: Propietarios
      {
        formId: 'vehicle-transfer',
        name: 'cuit_vendedor',
        type: 'cuit',
        label: 'CUIT del Propietario Actual',
        description: null,
        placeholder: 'XX-XXXXXXXX-X',
        required: true,
        orderIndex: 20,
        help: 'Debe corresponder a un registro v√°lido en SUJETOS_PASIVOS',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateCuit',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/cuit',
            fields: {
              vendedor_descripcion: 'spoDenominacion',
            },
            debounceTime: 600,
          },
        }),
      },
      {
        formId: 'vehicle-transfer',
        name: 'vendedor_descripcion',
        type: 'text',
        label: 'Datos del Vendedor',
        description: null,
        readonly: true,
        orderIndex: 21,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'cuit_comprador',
        type: 'cuit',
        label: 'CUIT del Nuevo Propietario',
        description: null,
        placeholder: 'XX-XXXXXXXX-X',
        required: true,
        orderIndex: 22,
        help: 'Debe corresponder a un registro v√°lido en SUJETOS_PASIVOS',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateCuit',
        }),
        eventsConfig: JSON.stringify({
          onValidation: {
            action: 'both',
            endpoint: 'validations/cuit',
            fields: {
              comprador_descripcion: 'spoDenominacion',
            },
            debounceTime: 600,
          },
        }),
      },
      {
        formId: 'vehicle-transfer',
        name: 'comprador_descripcion',
        type: 'text',
        label: 'Datos del Comprador',
        description: null,
        readonly: true,
        orderIndex: 23,
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'porcentaje_propiedad',
        type: 'percentage',
        label: 'Porcentaje de Propiedad',
        description: null,
        placeholder: '100',
        required: true,
        orderIndex: 24,
        help: 'Ingrese el porcentaje de propiedad que corresponde al nuevo propietario',
        fieldConfig: JSON.stringify({
          min: 0,
          max: 100,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'tipo_vinculo',
        type: 'select',
        label: 'Tipo de V√≠nculo',
        description: null,
        required: true,
        orderIndex: 25,
        help: 'Seleccione el tipo de v√≠nculo seg√∫n PAR_TIPOS_VINCULOS',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'PRO', label: 'Propietario' },
            { id: 'USU', label: 'Usuario' },
            { id: 'TEN', label: 'Tenedor' },
            { id: 'CON', label: 'Conductor Habitual' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'fecha_inicio_vinculo',
        type: 'date',
        label: 'Fecha Inicio V√≠nculo',
        description: null,
        required: true,
        orderIndex: 26,
        defaultValue: 'today',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'es_responsable',
        type: 'radio',
        label: '¬øSer√° Responsable Tributario?',
        description: null,
        required: true,
        orderIndex: 27,
        defaultValue: 'S',
        help: "Marque 'S√≠' si el nuevo propietario ser√° responsable tributario",
        fieldConfig: JSON.stringify({
          options: [
            { id: 'S', label: 'S√≠' },
            { id: 'N', label: 'No' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'usuario_alta',
        type: 'text',
        label: 'Usuario de Alta',
        description: null,
        readonly: true,
        orderIndex: 28,
        defaultValue: '{{ currentUser }}',
        help: 'Se completa autom√°ticamente con el usuario actual del sistema',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'fecha_alta_transferencia',
        type: 'datetime',
        label: 'Fecha y Hora de Alta',
        description: null,
        readonly: true,
        orderIndex: 29,
        defaultValue: '{{ now }}',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },

      // SECCI√ìN: Datos de la Transferencia
      {
        formId: 'vehicle-transfer',
        name: 'fecha_transferencia',
        type: 'date',
        label: 'Fecha de Transferencia',
        description: null,
        required: true,
        orderIndex: 30,
        defaultValue: 'today',
        help: 'Fecha en que se efect√∫a la transferencia del veh√≠culo',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'tipo_transferencia',
        type: 'select',
        label: 'Tipo de Transferencia',
        description: null,
        required: true,
        orderIndex: 31,
        defaultValue: 'C',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'C', label: 'Compraventa' },
            { id: 'D', label: 'Donaci√≥n' },
            { id: 'H', label: 'Herencia' },
            { id: 'S', label: 'Incorporaci√≥n a Sociedad' },
            { id: 'P', label: 'Permuta' },
            { id: 'J', label: 'Adjudicaci√≥n Judicial' },
            { id: 'O', label: 'Otro' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'monto_operacion',
        type: 'money',
        label: 'Monto de la Operaci√≥n',
        description: null,
        placeholder: '0,00',
        orderIndex: 32,
        help: 'Ingrese el monto de la transacci√≥n si corresponde',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'moneda',
        type: 'select',
        label: 'Unidad Monetaria',
        description: null,
        orderIndex: 33,
        defaultValue: 'ARS',
        help: 'Seleccione la moneda seg√∫n PAR_MONEDAS (LOV del formulario Oracle)',
        fieldConfig: JSON.stringify({
          loadFromEndpoint: true,
          endpoint: 'forms/dependent-options',
          requestBody: {
            endpoint: 'PAR_MONEDAS',
            parentValue: 'ALL',
          },
          valueField: 'pma_id',
          labelField: 'pma_descripcion',
          options: [
            { id: 'ARS', label: 'Pesos Argentinos' },
            { id: 'USD', label: 'D√≥lares Estadounidenses' },
            { id: 'EUR', label: 'Euros' },
          ],
        }),
        validationConfig: JSON.stringify({
          customValidation: 'validateMonedaExists',
        }),
        eventsConfig: JSON.stringify({
          onChange: {
            action: 'populate',
            endpoint: 'validations/moneda',
            requestBody: {
              value: '{{ field_value }}',
            },
            fields: {
              moneda_descripcion: 'pmaDescripcion',
            },
          },
        }),
      },
      {
        formId: 'vehicle-transfer',
        name: 'numero_transferencia',
        type: 'number',
        label: 'N√∫mero de Transferencia',
        description: null,
        readonly: true,
        orderIndex: 34,
        help: 'Se asigna autom√°ticamente usando TFA_SEQ.NEXTVAL como en Oracle Forms',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'codigo_situacion_especial',
        type: 'select',
        label: 'C√≥digo Situaci√≥n Especial',
        description: null,
        orderIndex: 35,
        help: 'C√≥digos 640, 641, 642, BUS impiden transferencias seg√∫n validaci√≥n del XML',
        fieldConfig: JSON.stringify({
          options: [
            { id: null, label: 'Sin situaci√≥n especial' },
            { id: '640', label: '640 - Embargado' },
            { id: '641', label: '641 - Inhibido' },
            { id: '642', label: '642 - Secuestrado' },
            { id: 'BUS', label: 'BUS - En b√∫squeda' },
            { id: 'OTHER', label: 'Otro c√≥digo' },
          ],
        }),
        validationConfig: JSON.stringify({
          customValidation: 'validateSituacionEspecial',
        }),
        eventsConfig: JSON.stringify({
          onChange: {
            action: 'validate',
            validation: 'blockTransferIfRestricted',
            message: 'Este c√≥digo impide realizar transferencias',
          },
        }),
      },

      // SECCI√ìN: Documentaci√≥n y Observaciones
      {
        formId: 'vehicle-transfer',
        name: 'validacion_fecha_fin',
        type: 'hidden',
        label: 'Validaci√≥n Fecha Fin',
        description: null,
        readonly: true,
        orderIndex: 36,
        help: 'Validaci√≥n interna del sistema seg√∫n l√≥gica del formulario Oracle',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validateFechaFinIsNull',
          errorMessage: 'El veh√≠culo no est√° activo (atr_fecha_fin no es null)',
        }),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'validacion_pcj_id',
        type: 'hidden',
        label: 'Validaci√≥n PCJ ID',
        description: null,
        readonly: true,
        orderIndex: 37,
        help: 'Validaci√≥n interna del sistema seg√∫n l√≥gica del formulario Oracle',
        fieldConfig: JSON.stringify({}),
        validationConfig: JSON.stringify({
          customValidation: 'validatePcjIdIsNull',
          errorMessage:
            'El veh√≠culo tiene c√≥digo de baja y no puede ser transferido',
        }),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'documentos_presentados',
        type: 'multiselect',
        label: 'Documentos Presentados',
        description: null,
        orderIndex: 35,
        help: 'Seleccione todos los documentos presentados para la transferencia',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'titulo', label: 'T√≠tulo del Veh√≠culo' },
            { id: 'cedula_verde', label: 'C√©dula Verde' },
            { id: 'cedula_azul', label: 'C√©dula Azul' },
            { id: 'dni_vendedor', label: 'DNI del Vendedor' },
            { id: 'dni_comprador', label: 'DNI del Comprador' },
            { id: 'formulario_08', label: 'Formulario 08' },
            { id: 'libre_deuda', label: 'Certificado Libre de Deuda' },
            { id: 'contrato_compraventa', label: 'Contrato de Compraventa' },
            { id: 'poder_notarial', label: 'Poder Notarial (si aplica)' },
            {
              id: 'certificado_verificacion',
              label: 'Certificado de Verificaci√≥n Policial',
            },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'situacion_especial',
        type: 'select',
        label: 'Situaci√≥n Especial',
        description: null,
        orderIndex: 36,
        defaultValue: 'NORMAL',
        help: 'Indique si el veh√≠culo tiene alguna situaci√≥n especial registrada',
        fieldConfig: JSON.stringify({
          options: [
            { id: 'NORMAL', label: 'Normal' },
            { id: 'EMBARGO', label: 'Embargado' },
            { id: 'INHIBICION', label: 'Inhibici√≥n' },
            { id: 'PRENDA', label: 'Prenda' },
            { id: 'SECUESTRO', label: 'Secuestro Judicial' },
            { id: 'OTRO', label: 'Otra Situaci√≥n' },
          ],
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
      {
        formId: 'vehicle-transfer',
        name: 'observaciones',
        type: 'textarea',
        label: 'Observaciones',
        description: null,
        placeholder: 'Observaciones adicionales sobre la transferencia...',
        orderIndex: 37,
        help: 'Registre cualquier informaci√≥n adicional relevante para la transferencia',
        fieldConfig: JSON.stringify({
          maxLength: 500,
        }),
        validationConfig: JSON.stringify({}),
        eventsConfig: JSON.stringify({}),
      },
    ];

    for (const fieldData of fields) {
      await this.formFieldRepository.create(fieldData);
    }
  }
}
